#!/bin/bash

# --- Variables ---
PRIMARY_IP=$(ip route | grep default | awk '{ print $9 }')
POD_CIDR="10.244.0.0/16"
SERVICE_CIDR="10.96.0.0/16"

echo "PRIMARY_IP: $PRIMARY_IP"
echo "POD_CIDR: $POD_CIDR"
echo "SERVICE_CIDR: $SERVICE_CIDR"

# --- Install dependencies ---
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl

# --- Configure kernel modules ---
cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

# --- Load kernel modules ---
sudo modprobe overlay
sudo modprobe br_netfilter

# --- Configure sysctl ---
cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

# --- Apply sysctl changes ---
sudo sysctl --system

# --- Install containerd ---
sudo apt-get install -y containerd

# --- Configure and restart containerd ---
sudo mkdir -p /etc/containerd
containerd config default | sed 's/SystemdCgroup = false/SystemdCgroup = true/' | sudo tee /etc/containerd/config.toml
sudo systemctl restart containerd
sudo systemctl status containerd

# --- Configure crictl to use containerd ---
sudo crictl config --set runtime-endpoint=unix:///run/containerd/containerd.sock --set image-endpoint=unix:///run/containerd/containerd.sock

# --- Get latest Kubernetes version ---
KUBE_LATEST=$(curl -L -s https://dl.k8s.io/release/stable.txt | awk 'BEGIN { FS="." } { printf "%s.%s", $1, $2 }')

# --- Add Kubernetes GPG key ---
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://pkgs.k8s.io/core:/stable:/${KUBE_LATEST}/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

# --- Add Kubernetes APT repository ---
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/${KUBE_LATEST}/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list

# --- Install kubelet, kubeadm, and kubectl ---
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

# --- Initialize Kubernetes Control Plane ---
sudo kubeadm init --pod-network-cidr $POD_CIDR --service-cidr $SERVICE_CIDR --apiserver-advertise-address $PRIMARY_IP

# --- Configure kubectl ---
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
chmod 600 $HOME/.kube/config

# --- Verify cluster health ---
kubectl get pods -n kube-system

# --- Install Cilium CNI ---
CILIUM_CLI_VERSION=$(curl -s https://raw.githubusercontent.com/cilium/cilium-cli/main/stable.txt)
CLI_ARCH=amd64
if [ "$(uname -m)" = "aarch64" ]; then CLI_ARCH=arm64; fi
curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin

cilium install --version 1.18.1
cilium status --wait
cilium connectivity test
